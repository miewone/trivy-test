# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  GKE_PROJECT: beha-data
  GKE_ZONE: asia-northeast3-a
  GKE_CLUSTER: superset-dev
  tag: ${{ github.sha }}

permissions:
  contents: read

jobs:
  pre-config:
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - name: Login to GCR
        env:
          PROJECT_ID: ${{secrets.GOOGLE_PROJECT_ID}}
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          export_default_credentials: true
      - name: Build Docker Image
        env:
          PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
        run: docker build -t trivy-test:$tag . #build the docker image test

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: trivy-test:$tag
          format: 'json'
          # exit-code: '1'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.json'
          severity: 'CRITICAL,HIGH'
      - name : Read Result.json
        shell: bash
        run: |
          cat trivy-results.json
      - name: Test
        run:  |-
          gcloud projects list
      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: 'trivy-results.sarif'

      # - name: Configure Docker Client
      #   run:  |-
      #     gcloud auth configure-docker --quiet #authenticate to gcr
        
      # - name: Push Docker Image to Container Registry GCR
      #   env: 
      #     IMAGE_NAME: trivy-test
      #     PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
      #   run: |-
      #     docker tag trivy-test:$tag gcr.io/$PROJECT_ID/trivy-test:$tag
      #     docker push gcr.io/$PROJECT_ID/trivy-test:$tag